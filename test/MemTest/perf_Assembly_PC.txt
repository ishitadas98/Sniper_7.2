 Percent |	Source code & Disassembly of memTest for cpu-clock (9 samples, percent: local period)
-----------------------------------------------------------------------------------------------------
         :
         :
         :
         :          Disassembly of section .text:
         :
         :          0000000000001169 <main>:
         :          main():
         :          int a[ARRAY_SIZE];
         :          int b[ARRAY_SIZE];
         :          int c[ARRAY_SIZE];
         :
         :          int main()
         :          {
    0.00 :   1169:   endbr64
    0.00 :   116d:   push   %rbp
    0.00 :   116e:   mov    %rsp,%rbp
    0.00 :   1171:   push   %rbx
    0.00 :   1172:   sub    $0x78,%rsp
         :          SimRoiStart();
    0.00 :   1176:   movq   $0x1,-0x78(%rbp)
    0.00 :   117e:   mov    -0x78(%rbp),%rax
    0.00 :   1182:   xchg   %bx,%bx
    0.00 :   1185:   mov    %rax,-0x70(%rbp)
         :          SimNamedMarker(4, "begin");
    0.00 :   1189:   movq   $0xd,-0x68(%rbp)
    0.00 :   1191:   movq   $0x4,-0x60(%rbp)
    0.00 :   1199:   lea    0xe64(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    0.00 :   11a0:   mov    %rax,-0x58(%rbp)
    0.00 :   11a4:   mov    -0x68(%rbp),%rax
    0.00 :   11a8:   mov    -0x60(%rbp),%rbx
    0.00 :   11ac:   mov    -0x58(%rbp),%rcx
    0.00 :   11b0:   xchg   %bx,%bx
    0.00 :   11b3:   mov    %rax,-0x50(%rbp)
         :          for (int i = 0; i < ARRAY_SIZE; i++)
    0.00 :   11b7:   movl   $0x0,-0x80(%rbp)
    0.00 :   11be:   jmp    121b <main+0xb2>
         :          {
         :          a[i] = 50*i;
    0.00 :   11c0:   mov    -0x80(%rbp),%eax
    0.00 :   11c3:   imul   $0x32,%eax,%eax
    0.00 :   11c6:   mov    -0x80(%rbp),%edx
    0.00 :   11c9:   movslq %edx,%rdx
   11.11 :   11cc:   lea    0x0(,%rdx,4),%rcx
    0.00 :   11d4:   lea    0x7a4065(%rip),%rdx        # 7a5240 <a>
    0.00 :   11db:   mov    %eax,(%rcx,%rdx,1)
         :          b[i] = 50*i;
    0.00 :   11de:   mov    -0x80(%rbp),%eax
    0.00 :   11e1:   imul   $0x32,%eax,%eax
   11.11 :   11e4:   mov    -0x80(%rbp),%edx
    0.00 :   11e7:   movslq %edx,%rdx
    0.00 :   11ea:   lea    0x0(,%rdx,4),%rcx
   11.11 :   11f2:   lea    0x2e47(%rip),%rdx        # 4040 <b>
    0.00 :   11f9:   mov    %eax,(%rcx,%rdx,1)
         :          c[i] = 0;
   11.11 :   11fc:   mov    -0x80(%rbp),%eax
    0.00 :   11ff:   cltq
    0.00 :   1201:   lea    0x0(,%rax,4),%rdx
    0.00 :   1209:   lea    0x3d3730(%rip),%rax        # 3d4940 <c>
    0.00 :   1210:   movl   $0x0,(%rdx,%rax,1)
         :          for (int i = 0; i < ARRAY_SIZE; i++)
    0.00 :   1217:   addl   $0x1,-0x80(%rbp)
    0.00 :   121b:   cmpl   $0xf423f,-0x80(%rbp)
   11.11 :   1222:   jle    11c0 <main+0x57>
         :          }
         :
         :          int *p = (int *) 0x614a6c;
    0.00 :   1224:   movq   $0x614a6c,-0x48(%rbp)
         :          printf("%x\n", p);
    0.00 :   122c:   mov    -0x48(%rbp),%rax
    0.00 :   1230:   mov    %rax,%rsi
    0.00 :   1233:   lea    0xdd0(%rip),%rdi        # 200a <_IO_stdin_used+0xa>
    0.00 :   123a:   mov    $0x0,%eax
    0.00 :   123f:   callq  1070 <printf@plt>
         :          printf("address of a[%d] is:0x%x\n", 99, &a[99]);
    0.00 :   1244:   lea    0x7a4181(%rip),%rdx        # 7a53cc <a+0x18c>
    0.00 :   124b:   mov    $0x63,%esi
    0.00 :   1250:   lea    0xdb7(%rip),%rdi        # 200e <_IO_stdin_used+0xe>
    0.00 :   1257:   mov    $0x0,%eax
    0.00 :   125c:   callq  1070 <printf@plt>
         :
         :          for (int i = 0; i < ARRAY_SIZE; i++)
    0.00 :   1261:   movl   $0x0,-0x7c(%rbp)
    0.00 :   1268:   jmp    12b6 <main+0x14d>
         :          {
         :          c[i] = a[i] + b[i];
    0.00 :   126a:   mov    -0x7c(%rbp),%eax
    0.00 :   126d:   cltq
    0.00 :   126f:   lea    0x0(,%rax,4),%rdx
    0.00 :   1277:   lea    0x7a3fc2(%rip),%rax        # 7a5240 <a>
   11.11 :   127e:   mov    (%rdx,%rax,1),%edx
   11.11 :   1281:   mov    -0x7c(%rbp),%eax
    0.00 :   1284:   cltq
    0.00 :   1286:   lea    0x0(,%rax,4),%rcx
    0.00 :   128e:   lea    0x2dab(%rip),%rax        # 4040 <b>
    0.00 :   1295:   mov    (%rcx,%rax,1),%eax
   22.22 :   1298:   lea    (%rdx,%rax,1),%ecx
    0.00 :   129b:   mov    -0x7c(%rbp),%eax
    0.00 :   129e:   cltq
    0.00 :   12a0:   lea    0x0(,%rax,4),%rdx
    0.00 :   12a8:   lea    0x3d3691(%rip),%rax        # 3d4940 <c>
    0.00 :   12af:   mov    %ecx,(%rdx,%rax,1)
         :          for (int i = 0; i < ARRAY_SIZE; i++)
    0.00 :   12b2:   addl   $0x1,-0x7c(%rbp)
    0.00 :   12b6:   cmpl   $0xf423f,-0x7c(%rbp)
    0.00 :   12bd:   jle    126a <main+0x101>
         :          }
         :          SimNamedMarker(5, "end");
    0.00 :   12bf:   movq   $0xd,-0x40(%rbp)
    0.00 :   12c7:   movq   $0x5,-0x38(%rbp)
    0.00 :   12cf:   lea    0xd52(%rip),%rax        # 2028 <_IO_stdin_used+0x28>
    0.00 :   12d6:   mov    %rax,-0x30(%rbp)
    0.00 :   12da:   mov    -0x40(%rbp),%rax
    0.00 :   12de:   mov    -0x38(%rbp),%rbx
    0.00 :   12e2:   mov    -0x30(%rbp),%rcx
    0.00 :   12e6:   xchg   %bx,%bx
    0.00 :   12e9:   mov    %rax,-0x28(%rbp)
         :          SimRoiEnd();
    0.00 :   12ed:   movq   $0x2,-0x20(%rbp)
    0.00 :   12f5:   mov    -0x20(%rbp),%rax
    0.00 :   12f9:   xchg   %bx,%bx
    0.00 :   12fc:   mov    %rax,-0x18(%rbp)
         :
         :          printf("done!\n");
    0.00 :   1300:   lea    0xd25(%rip),%rdi        # 202c <_IO_stdin_used+0x2c>
    0.00 :   1307:   callq  1060 <puts@plt>
    0.00 :   130c:   mov    $0x0,%eax
    0.00 :   1311:   add    $0x78,%rsp
    0.00 :   1315:   pop    %rbx
    0.00 :   1316:   pop    %rbp
    0.00 :   1317:   retq
